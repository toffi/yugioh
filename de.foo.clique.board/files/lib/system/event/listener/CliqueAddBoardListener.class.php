<?phprequire_once(WCF_DIR.'lib/system/event/EventListener.class.php');require_once(WBB_DIR.'lib/data/board/BoardEditor.class.php');require_once(WCF_DIR.'lib/system/language/LanguageEditor.class.php');/** * @author	$foo * @license	>Creative Commons Namensnennung 3.0 Deutschland License * @package	de.foo.clique */class CliqueAddBoardListener implements EventListener {	public $boardTitleName = '';	public $boardTitleValue = '';	public $boardDescription = '';	public $boardDescriptionValue = '';	public $boardType = 0;	public $packeID = 0;	public $invisible = CLIQUE_BOARD_INVISIBLE;	public $searchableForSimilarThreads = 0;	public function execute($eventObj, $className, $eventName){        if($eventName != 'save') {            if(!CliqueEditor::getCliquePermission('canActivateModules')) return;    		$sql = "SELECT	boardID    						FROM		wbb".WBB_N."_board    						WHERE		title = 'wbb.clique.board.name.".$eventObj->cliqueID."'    						ORDER BY boardID ASC";    		$cliqueBoard = WCF::getDB()->getFirstRow($sql, Database::SQL_ASSOC);        }        else {            $eventObj->clique->boardEnable = 0;            $eventObj->clique->boardID = 0;            $cliqueBoard['boardID'] = 0;            $eventObj->clique->name = $eventObj->name;                    }			//No Board -> Create one		if($eventObj->clique->boardEnable == 0 && $eventObj->clique->boardID == 0 && $cliqueBoard['boardID'] == 0) {				// Create language variable			$this->languages = WCF::getCache()->get('languages', 'languages');			$this->packeID = WCF::getPackageID('de.foo.clique.board');			foreach (array_keys($this->languages) as $languageID) {				$language = new Language($languageID);				$this->boardTitleValue = $language->get('wbb.board.name.clique.once');				$this->boardDescriptionValue = $language->get('wbb.board.name.clique.once');				$this->boardTitleName = 'wbb.clique.board.name.';				$this->boardDescription = 'wbb.clique.board.name.';				$this->boardTitleName .= $eventObj->cliqueID;				$this->boardTitleValue .= '»'.$eventObj->clique->name.'«';				$this->boardDescription .= $eventObj->cliqueID.'.description';				$this->boardDescriptionValue .= '»'.$eventObj->clique->name.'«';				$language = new LanguageEditor($languageID);				$language->updateItems(array($this->boardTitleName => $this->boardTitleValue), 0, $this->packeID);				$language->updateItems(array($this->boardDescription => $this->boardDescriptionValue), 0, $this->packeID);				$language->deleteLanguageFiles($languageID, 'wbb.clique.board', PACKAGE_ID);			}				// Create Boardcategorie			$this->board = BoardEditor::create(CLIQUE_BOARD_CATEGORIE, null, $this->boardTitleName, $this->boardDescription,$this->boardType,			'', '', '', '', '', TIME_NOW, '', '','', '', '', '','', '', '', '', '',$this->invisible, '', '', '','', '', '', $this->searchableForSimilarThreads);				// Set boardID to clique			$sql = "UPDATE wcf".WCF_N."_clique							SET boardID = ".$this->board->boardID.",                                boardEnable = 1							WHERE cliqueID = ".$eventObj->cliqueID;			WCF::getDB()->sendQuery($sql);				// Set cliqueID to board			$sql = "UPDATE wbb".WBB_N."_board							SET cliqueID = ".$eventObj->cliqueID.",                                cliquBoard = 1							WHERE boardID = ".$this->board->boardID;			WCF::getDB()->sendQuery($sql);			Board::resetCache();		}			//Have a Board -> mark board		elseif(isset($_POST['boardEnable']) && $cliqueBoard['boardID'] != 0) {				// Set boardID to clique			$sql = "UPDATE wcf".WCF_N."_clique							SET boardID = ".$cliqueBoard['boardID']."							WHERE cliqueID = ".$eventObj->cliqueID;			WCF::getDB()->sendQuery($sql);	}			//Have a Board -> unmark board		elseif(!isset($_POST['boardEnable']) && $eventObj->clique->boardID != 0 && $cliqueBoard['boardID'] != 0) {				// Unset boardID to clique			$sql = "UPDATE wcf".WCF_N."_clique							SET boardID = 0							WHERE cliqueID = ".$eventObj->cliqueID;			WCF::getDB()->sendQuery($sql);		}	}}?>