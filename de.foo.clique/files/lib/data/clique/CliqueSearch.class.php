<?php// wcf importsrequire_once(WCF_DIR.'lib/data/message/search/AbstractSearchableMessageType.class.php');require_once(WCF_DIR.'lib/data/clique/CliqueSearchResult.class.php');/** * An implementation of SearchableMessageType for searching in forum posts. * * @author 	Marcel Werk * @copyright	2001-2009 WoltLab GmbH * @license	WoltLab Burning Board License <http://www.woltlab.com/products/burning_board/license.php> * @package	com.woltlab.wbb * @subpackage	data.post * @category 	Burning Board */class CliqueSearch extends AbstractSearchableMessageType {	protected $messageCache = array();		/**			* Caches the data of the messages with the given ids.		*/	public function cacheMessageData($messageIDs, $additionalData = null) {		$sql = "SELECT		clique.*						FROM				wcf".WCF_N."_clique clique						WHERE				clique.cliqueID IN (".$messageIDs.")";		$result = WCF::getDB()->sendQuery($sql);		while ($row = WCF::getDB()->fetchArray($result)) {			$this->messageCache[$row['cliqueID']] = array('type' => 'clique', 'message' => new CliqueSearchResult($row));		}	}	/**	 * @see SearchableMessageType::getMessageData()	*/	public function getMessageData($messageID, $additionalData = null) {		if (isset($this->messageCache[$messageID])) return $this->messageCache[$messageID];		return null;	}	/**	 * Returns the database table name for this search type.	*/	public function getTableName() {		return 'wcf'.WCF_N.'_clique';	}	/**	 * Returns the message id field name for this search type.	 */	public function getIDFieldName() {		return 'cliqueID';	}	/**	 * @see SearchableMessageType::getResultTemplateName()	*/	public function getResultTemplateName() {		return 'searchResultClique';	}	/**	 * @see SearchableMessageType::getSubjectFieldNames()	*/	public function getSubjectFieldNames() {		return array('name');	}	public function getMessageFieldNames() {		return array('description', 'shortdescription');	}    	/**	 * @see SearchableMessageType::getUserIDFieldName()	 */	public function getUserIDFieldName() {		return 'messageTable.raiserID';	}}?>